spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        show_sql: false
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect

  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: false
    validate-on-migrate: true

  data:
    mongodb:
      uri: ${MONGODB_URL}
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: read:user,user:email

springdoc:
  swagger-ui:
    enabled: false
  enable-kotlin: false

  output:
    ansi:
      enabled: always

langchain4j:
  google-ai-gemini:
    recommend:
      api-key: ${GEMINI_API_KEY}
      model-name: ${GEMINI_MODEL}
    report:
      api-key: ${GEMINI_REPORT_API_KEY}
      model-name: ${GEMINI_REPORT_MODEL}

openai:
  api-key: ${OPENAI_API_KEY}
  embedding-model: ${OPENAI_MODEL}

qdrant:
  host: ${QDRANT_URL}
  port: 6334
  api-key: ${QDRANT_API_KEY}
  collection-name: amateurs

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration-ms: 3600000
  refresh-token-expiration-ms: 1209600000

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret_key: ${AWS_SECRET_KEY}
    region:
      static: ${S3_REGION}
    s3:
      bucket: ${S3_BUCKET_NAME}
    cloudfront:
      domain: ${CLOUD_FRONT_DOMAIN_NAME}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    info:
      access: read_only
    prometheus:
      access: read_only
    metrics:
      access: read_only
  metrics:
    tags:
      application: ${spring.application.name}
      version: '@project.version@'
  prometheus:
    metrics:
      export:
        enabled: true
        step: 30s

logging:
  level:
    root: INFO
    org.springframework: WARN
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
  file:
    name: /var/log/spring-boot/application.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 7
      total-size-cap: 1GB

oauth:
  success-redirect-url: https://dev.amateurs.co.kr

cookie:
  domain: .amateurs.co.kr

app:
  cors:
    allowed-origins: https://amateurs.co.kr