spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  data:
    mongodb:
      uri: ${MONGODB_URL}
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

  output:
    ansi:
      enabled: always

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${LOCAL_CLIENT_ID}
            client-secret: ${LOCAL_CLIENT_SECRET}
            scope: read:user,user:email
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope: profile_nickname, profile_image, account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    docExpansion: none
  enable-kotlin: false

langchain4j:
  google-ai-gemini:
    recommend:
      api-key: ${GEMINI_API_KEY}
      model-name: ${GEMINI_MODEL}
    report:
      api-key: ${GEMINI_REPORT_API_KEY}
      model-name: ${GEMINI_REPORT_MODEL}

openai:
  api-key: ${OPENAI_API_KEY}
  embedding-model: ${OPENAI_MODEL}

qdrant:
  host: ${QDRANT_URL}
  port: 6334
  api-key: ${QDRANT_API_KEY}
  collection-name: amateurs

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration-ms: 3600000
  refresh-token-expiration-ms: 1209600000

oauth:
  success-redirect-url: http://localhost:5173

cookie:
  domain: localhost
  secure: false

swagger:
  server:
    url: ${SERVER_URL}

verification:
  service:
    url: ${VERIFICATION_SERVICE_URL}

otel:
  service:
    name: amateurs-api-server
  traces:
    exporter: console
  metrics:
    exporter: none
  logs:
    exporter: none

cloudflare:
  r2:
    endpoint: ${CLOUDFLARE_R2_ENDPOINT}
    access-key: ${CLOUDFLARE_R2_ACCESS_KEY}
    secret-key: ${CLOUDFLARE_R2_SECRET_KEY}
    bucket: ${CLOUDFLARE_R2_BUCKET}
    public-url: ${CLOUDFLARE_R2_PUBLIC_URL}
